c
authorize @task
c
@user.tasks.inactive.count
c
@complete
@active
@overdue
c
collaborator
c
self.collaborators
self.collaborators.include?(collaborator)
collaborator == nil
collaborator == self.owner
self.owner
collaborator == nil || collaborator == self.owner || self.collaborators.include?(collaborator)
collaborator = User.find_by(email: email)
email = email_array[0]
email_array = emails.split(",").map{|email| email.strip}
emails
c
UserProject.all
UserProjet.all
project_params
request.action_type
request.method_type
project_params
@project
