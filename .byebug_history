c
emails
c
params[:project][:collaborator_emails].join(",")
params[:project][:collaborator_emails].shift!.join(",")
params[:project][:collaborator_emails].shift.join(",")
params[:project][:collaborator_emails].join(",")
c
params[:project][:collaborator_emails]
params[:project][collaborator_emails]
params[:project]
params
c
params
c
params
c
self.collaborators
c
params.require(:project).permit(:name, :description, :collaborator_emails, :owner_id, :due_date, :status, notes_attributes: [:title, :content, :user_id])
c
params[:user][:role]
c
params[:user][:role]
c
resource.role
resource
c
resource
resource.role
c
resource.role
c
params[:user][:role]
c
params[:user][:role]
params[:user][:role] == "admin"
c
params[:user][:role] == "admin"
c
params["role"]
params
c
["roby", "sharma"].join(", ")
["roby", "sharma"].join(",")
task.assigned_users.pluck(:name).join(",")
task.assigned_users.pluck(:name)
c
task.assigned_users.pluck(:name)
task.assigned_users
task = project.tasks.where(status: 1).last
c
task.assigned_users
task.assigned_user
task.assigned_tasks
project.assigned_tasks
c
self.action_name
request.action_name
request.action
request
request.url
request.action
request.method
c
(current_user.complete_tasks + current_user.complete_tasks).uniq.count
c
UserTask.all
@project
@user.tasks
@user.assigned_tasks
@user.tasks
c
@task.status
@task.update(task_params)
c
@task.status
@task.save
@task.status="progress"
@task.status
@task.update(task_params)
task_params
c
@task.status
@task.update(task_params)
c
@task.status
@task.update(task_params)
task_params
c
@task.update(task_params)
params
c
authorize @task
c
@user.tasks.inactive.count
c
@complete
@active
@overdue
c
collaborator
c
self.collaborators
self.collaborators.include?(collaborator)
collaborator == nil
collaborator == self.owner
self.owner
collaborator == nil || collaborator == self.owner || self.collaborators.include?(collaborator)
collaborator = User.find_by(email: email)
email = email_array[0]
email_array = emails.split(",").map{|email| email.strip}
emails
c
UserProject.all
UserProjet.all
project_params
request.action_type
request.method_type
project_params
@project
